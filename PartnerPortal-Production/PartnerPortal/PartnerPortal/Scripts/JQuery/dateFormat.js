var DateFormat = {}; !function (e) { var a = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], r = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], n = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], s = { Jan: "01", Feb: "02", Mar: "03", Apr: "04", May: "05", Jun: "06", Jul: "07", Aug: "08", Sep: "09", Oct: "10", Nov: "11", Dec: "12" }, o = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{0,3}[Z\-+]?(\d{2}:?\d{2})?/; e.format = function () { function e(e) { return a[parseInt(e, 10)] || e } function i(e) { return r[parseInt(e, 10)] || e } function u(e) { var a = parseInt(e, 10) - 1; return t[a] || e } function c(e) { var a = parseInt(e, 10) - 1; return n[a] || e } function h(e) { return s[e] || e } function l(e) { var a, r, t, n, s, o = e, i = ""; return -1 !== o.indexOf(".") && (n = o.split("."), o = n[0], i = n[n.length - 1]), s = o.split(":"), 3 === s.length ? (a = s[0], r = s[1], t = s[2].replace(/\s.+/, "").replace(/[a-z]/gi, ""), o = o.replace(/\s.+/, "").replace(/[a-z]/gi, ""), { time: o, hour: a, minute: r, second: t, millis: i }) : { time: "", hour: "", minute: "", second: "", millis: "" } } function y(e, a) { for (var r = a - String(e).length, t = 0; r > t; t++) e = "0" + e; return e } return { parseDate: function (e) { var a, r, t = { date: null, year: null, month: null, dayOfMonth: null, dayOfWeek: null, time: null }; if ("number" == typeof e) return this.parseDate(new Date(e)); if ("function" == typeof e.getFullYear) t.year = String(e.getFullYear()), t.month = String(e.getMonth() + 1), t.dayOfMonth = String(e.getDate()), t.time = l(e.toTimeString() + "." + e.getMilliseconds()); else if (-1 != e.search(o)) a = e.split(/[T\+-]/), t.year = a[0], t.month = a[1], t.dayOfMonth = a[2], t.time = l(a[3].split(".")[0]); else switch (a = e.split(" "), 6 === a.length && isNaN(a[5]) && (a[a.length] = "()"), a.length) { case 6: t.year = a[5], t.month = h(a[1]), t.dayOfMonth = a[2], t.time = l(a[3]); break; case 2: r = a[0].split("-"), t.year = r[0], t.month = r[1], t.dayOfMonth = r[2], t.time = l(a[1]); break; case 7: case 9: case 10: t.year = a[3], t.month = h(a[1]), t.dayOfMonth = a[2], t.time = l(a[4]); break; case 1: r = a[0].split(""), t.year = r[0] + r[1] + r[2] + r[3], t.month = r[5] + r[6], t.dayOfMonth = r[8] + r[9], t.time = l(r[13] + r[14] + r[15] + r[16] + r[17] + r[18] + r[19] + r[20]); break; default: return null } return t.time ? t.date = new Date(t.year, t.month - 1, t.dayOfMonth, t.time.hour, t.time.minute, t.time.second, t.time.millis) : t.date = new Date(t.year, t.month - 1, t.dayOfMonth), t.dayOfWeek = String(t.date.getDay()), t }, date: function (a, r) { try { var t = this.parseDate(a); if (null === t) return a; for (var n, s = t.year, o = t.month, h = t.dayOfMonth, l = t.dayOfWeek, d = t.time, m = "", f = "", b = "", k = !1, p = 0; p < r.length; p++) { var M = r.charAt(p), g = r.charAt(p + 1); if (k) "'" == M ? (f += "" === m ? "'" : m, m = "", k = !1) : m += M; else switch (m += M, b = "", m) { case "ddd": f += e(l), m = ""; break; case "dd": if ("d" === g) break; f += y(h, 2), m = ""; break; case "d": if ("d" === g) break; f += parseInt(h, 10), m = ""; break; case "D": h = 1 == h || 21 == h || 31 == h ? parseInt(h, 10) + "st" : 2 == h || 22 == h ? parseInt(h, 10) + "nd" : 3 == h || 23 == h ? parseInt(h, 10) + "rd" : parseInt(h, 10) + "th", f += h, m = ""; break; case "MMMM": f += c(o), m = ""; break; case "MMM": if ("M" === g) break; f += u(o), m = ""; break; case "MM": if ("M" === g) break; f += y(o, 2), m = ""; break; case "M": if ("M" === g) break; f += parseInt(o, 10), m = ""; break; case "y": case "yyy": if ("y" === g) break; f += m, m = ""; break; case "yy": if ("y" === g) break; f += String(s).slice(-2), m = ""; break; case "yyyy": f += s, m = ""; break; case "HH": f += y(d.hour, 2), m = ""; break; case "H": if ("H" === g) break; f += parseInt(d.hour, 10), m = ""; break; case "hh": n = 0 === parseInt(d.hour, 10) ? 12 : d.hour < 13 ? d.hour : d.hour - 12, f += y(n, 2), m = ""; break; case "h": if ("h" === g) break; n = 0 === parseInt(d.hour, 10) ? 12 : d.hour < 13 ? d.hour : d.hour - 12, f += parseInt(n, 10), m = ""; break; case "mm": f += y(d.minute, 2), m = ""; break; case "m": if ("m" === g) break; f += d.minute, m = ""; break; case "ss": f += y(d.second.substring(0, 2), 2), m = ""; break; case "s": if ("s" === g) break; f += d.second, m = ""; break; case "S": case "SS": if ("S" === g) break; f += m, m = ""; break; case "SSS": f += y(d.millis.substring(0, 3), 3), m = ""; break; case "a": f += d.hour >= 12 ? "PM" : "AM", m = ""; break; case "p": f += d.hour >= 12 ? "p.m." : "a.m.", m = ""; break; case "E": f += i(l), m = ""; break; case "'": m = "", k = !0; break; default: f += M, m = "" } } return f += b } catch (S) { return console && console.log && console.log(S), a } }, prettyDate: function (e) { var a, r, t, n, s; return ("string" == typeof e || "number" == typeof e) && (a = new Date(e)), "object" == typeof e && (a = new Date(e.toString())), r = ((new Date).getTime() - a.getTime()) / 1e3, t = Math.abs(r), n = Math.floor(t / 86400), isNaN(n) ? void 0 : (s = 0 > r ? "from now" : "ago", 60 > t ? r >= 0 ? "just now" : "in a moment" : 120 > t ? "1 minute " + s : 3600 > t ? Math.floor(t / 60) + " minutes " + s : 7200 > t ? "1 hour " + s : 86400 > t ? Math.floor(t / 3600) + " hours " + s : 1 === n ? r >= 0 ? "Yesterday" : "Tomorrow" : 7 > n ? n + " days " + s : 7 === n ? "1 week " + s : 31 > n ? Math.ceil(n / 7) + " weeks " + s : "more than 5 weeks " + s) }, toBrowserTimeZone: function (e, a) { return this.date(new Date(e), a || "MM/dd/yyyy HH:mm:ss") } } }() }(DateFormat);