@model PartnerPortal.Models.GatewayVM

<style>
    .landingLeftPanel {
        clear: both;
        display: inline-block;
        width: 600px;
        min-height: 400px;
        background-color: #ffffff;
        
    }
    .landingLeftPanelContentBox {
        display: inline-block;
        margin-top: 60px;
        margin-left: 40px;
        margin-right: 40px;
        min-width: 80%;
    }
    .clsTextBoxLanding {
        width: 80% !important;
        border: 0 !important;
        border-bottom: 1px solid black !important;
        min-height: 30px !important;
        padding-left: 15px; padding-right: 15px; margin-right: 1%; box-sizing: border-box;
    }
    .invalidated {
        border-bottom: 1px solid #FF0208 !important;
        background-color: #FFBABC !important;
    }
    .btnLanding {
        background-color: #21459A;
        border: none;
        color: #FFFFFF;
        text-align: center;
        -webkit-transition-duration: 0.4s;
        transition-duration: 0.4s;
        margin: 10px 0 !important;
        text-decoration: none;
        font-size: 16px;
        cursor: pointer;
        height: 40px;
        width: 100%;
    }

</style>

<div class="landingLeftPanel">

    <div style="text-align: center;">
        <div class="landingLeftPanelContentBox">
            <div style="color: #000000; font-size: 26pt; font-weight: bold;letter-spacing: 4px;">
                Partner Portal
            </div>
            <div style="color: #C5C7CA; font-size: 10pt; margin-top: 30px; font-weight: bold;">
                Enter your new password to reset. Password should be eight characters, at least one letter, one number and one special character.
            </div>
            <div style="color: #C5C7CA; font-size: 10pt; margin-top: 10px; font-weight: bold;">
                
                @using (Html.BeginForm("ResetPassword", "Gateway", FormMethod.Post, new { onsubmit = "return ValidateSubmit()" }))
                {
                    @Html.HiddenFor(m => m.LoginId)
                    if (ViewData.ModelState.IsValid)
                    {
                        <div class="leftFloat width100p paddingtop10">
                            @Html.TextBoxFor(m => m.LoginPassword, new { placeholder = "New Password", @class = "clsTextBoxLanding" })
                            <div id="invalidPassword" class="leftFloat width100p paddingtop10" style="color: #ca0808; display: none;">Invalid password.</div>

                        </div>
                        <div class="leftFloat width100p paddingtop10">
                            @Html.TextBoxFor(m => m.ConfirmLoginPassword, new { placeholder = "Confirm New Password", @class = "clsTextBoxLanding" })
                            <div id="invalidConfirmPassword" class="leftFloat width100p paddingtop10" style="color: #ca0808; display: none;">Invalid confirm password.</div>
                            <div id="unmatchedConfirmPassword" class="leftFloat width100p paddingtop10" style="color: #ca0808; display: none;">Password and Confirm password not matching.</div>
                        </div>


                        <div class="leftFloat width100p paddingtop20" style="margin-top: 20px; padding-left: 15px; padding-right: 15px;">

                            <span style="color: #000000; font-size: 8pt; display: inline-block; text-align: right; width: 45%;">
                                <input type="submit" name="forgotPass" class="btnLanding" value="Send Request">
                            </span>

                        </div>
                    }
                    else
                    {
                        <div style="color: #C5C7CA; font-size: 10pt; margin-top: 30px; font-weight: bold;">
                            @Html.ValidationMessage("Invalid Token");
                        </div>
                    }
                    <div class="leftFloat width100p paddingtop20" style="margin-top: 20px; font-size: 6pt;">
                        <a href="https://www.starmicronics.com/pages/terms-of-use" target="_blank">Term of use.</a>  |  <a href="https://www.starmicronics.com/pages/Privacy-Policy" target="_blank"> Privacy Policy.</a>
                    </div>


                }

            </div>

        </div>
    </div>
</div>
<script>

    function validatePassword(pass) {
        var re = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@@$!%*#?&])[A-Za-z\d@@$!%*#?&]{8,}$/;
        return re.test(pass);
    }



    function ValidateSubmit() {
        document.getElementById("invalidPassword").style.display = "none";
        document.getElementById("invalidConfirmPassword").style.display = "none";
        document.getElementById("unmatchedConfirmPassword").style.display = "none";
        document.getElementById("LoginPassword").classList.remove("invalidated");
        document.getElementById("ConfirmLoginPassword").classList.remove("invalidated");
  
        var pass = document.getElementById("LoginPassword").value;
        var passCnf = document.getElementById("ConfirmLoginPassword").value;
      
        var doSubmit = false;
        if (!validatePassword(pass)) {
            document.getElementById("LoginPassword").classList.add("invalidated");
            document.getElementById("invalidPassword").style.display = "block";
            return false;
        }
        if (!validatePassword(passCnf)) {
            document.getElementById("ConfirmLoginPassword").classList.add("invalidated");
            document.getElementById("invalidConfirmPassword").style.display = "block";
            return false;
        }
        if (pass !== passCnf) {
            
            document.getElementById("unmatchedConfirmPassword").style.display = "block";
            return false;
        }

        return true;
    }
</script>
